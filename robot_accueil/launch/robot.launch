<launch>
    <!-- Kobuki base -->
    <arg name="urdf_file" default="$(find xacro)/xacro '$(find tbot_description)/urdf/tbot.urdf.xacro'" />
    <param name="robot_description" command="$(arg urdf_file)" />
    <include file="$(find kobuki_node)/launch/minimal.launch"/>
    <node pkg="tf" type="static_transform_publisher" name="base_link_in_base_footprint"
        args="0.0 0.0 0.1 0.0 0.0 0.0 /base_footprint /base_link 80" />

    <!-- Laser Front -->
    <node name="robot_scan" pkg="urg_node" type="urg_node" >
        <param name="serial_port" value="/dev/ttyACM0"/>
        <param name="frame_id" value="laserfront_link"/>
        <param name="angle_min" value="-2.0"/>
        <param name="angle_max" value="2.0"/>
        <remap from="scan" to="front_scan"/>
    </node>
    <node pkg="tf" type="static_transform_publisher" name="laserfront_in_base_link"
        args="0.2 0.0 0.05 0.0 0.0 0.0 /base_link /laserfront_link 80" />

    <!-- Laser Back -->
    <node name="robot_scan_back" pkg="urg_node" type="urg_node" >
        <param name="serial_port" value="/dev/ttyACM1"/>
        <param name="frame_id" value="laserback_link"/>
        <param name="angle_min" value="-2.0"/>
        <param name="angle_max" value="2.0"/>
        <remap from="scan" to="back_scan"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="laserback_in_base_link"
        args="-0.2 0.0 0.05 3.14 0.0 0.0 /base_link /laserback_link 80" />


<!-- Realsense -->
  <include file="$(find realsense2_camera)/launch/rs_camera.launch">
    <arg name="align_depth" value="true" />
  </include>
  <node pkg="tf" type="static_transform_publisher" name="camera_in_base_link"
    args="0.2 0.0 0.1 0.0 0.0 0.0 /base_link /camera_link 80" />
    

    <!-- <node pkg="robot_accueil" type="get_goal.py" name="get_goal" output="screen" > -->

    
    <arg name="laser" default="front_scan" />
    <arg name="map_file" default="$(find robot_accueil)/map/map_etage.yaml"/>
    
    <!-- Localization -->
    <arg name="robot_init_x" default="0.0" />
    <arg name="robot_init_y" default="0.0"/>
    <arg name="robot_init_phi" default="0.0" />

     <!-- MAP SERVER -->
    <node name="map_server" pkg="map_server" type="map_server"  args="$(find robot_accueil)/map/map.yaml" respawn="true" >
    </node>

     <!-- AMCL -->
     <node pkg="amcl" type="amcl" name="amcl" >
        <remap from="scan" to="front_scan"/>
        <param name="odom_frame_id" value="odom"/>
        <param name="use_map_topic" value="true"/>
        <param name="base_frame_id" value="base_link"/>
        <param name="global_frame_id" value="map"/>
        <param name="tf_broadcast" value="true" />
        <param name="initial_pose_x" value="$(arg robot_init_x)"/>
        <param name="initial_pose_y" value="$(arg robot_init_y)"/>
        <param name="initial_pose_a" value="$(arg robot_init_phi)"/>
     </node>

    <param name="rviz" value="false" unless="$(arg rviz)" /> <!-- This param won't be set when "unless" condition is met -->
    <group if="$(arg rviz)">
            <!-- stuff that will only be evaluated if foo is true -->
            <node pkg="rviz" type="rviz" name="rviz" args="-d $(find robot_accueil)/rviz/config.rviz" />
    </group>
</launch>
